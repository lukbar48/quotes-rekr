{"version":3,"sources":["App.js","index.js"],"names":["App","useState","allQuotesList","setAllQuotesList","quote","setQuote","randomQuotesList","setRandomQuotesList","useEffect","a","fetch","result","json","data","console","log","fetchQuotes","className","onClick","randomNumber","Math","random","length","toFixed","author","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAiDeA,MA9Cf,WAAgB,IAAD,EAC6BC,qBAD7B,mBACNC,EADM,KACSC,EADT,OAEaF,qBAFb,mBAENG,EAFM,KAECC,EAFD,OAGmCJ,mBAAS,IAH5C,mBAGNK,EAHM,KAGYC,EAHZ,KA8Bb,OAzBAC,qBAAU,YACS,uCAAG,8BAAAC,EAAA,+EAEKC,MACnB,yIAHc,cAEVC,EAFU,gBAKGA,EAAOC,OALV,OAKVC,EALU,OAMhBV,EAAiBU,GAND,kDAQhBC,QAAQC,IAAR,MARgB,0DAAH,qDAWjBC,KACC,IAaD,sBAAKC,UAAU,MAAf,UACE,wBAAQC,QAZK,WACf,IAAMC,GAAgBC,KAAKC,SAAWnB,EAAcoB,QAAQC,QAAQ,GACpElB,EAASH,EAAciB,IACvBZ,EAAoB,GAAD,mBAAKD,GAAL,CAAuBJ,EAAciB,OAStD,uBACA,wBAAQD,QAPS,WACnBb,EAASC,EAAiBA,EAAiBgB,OAAS,KAMlD,4BACClB,EACC,qCACE,6BAAKA,EAAMA,QACX,6BAAKA,EAAMoB,YAGb,0DCtCRC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a8c21a71.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\n\nfunction App() {\n  const [allQuotesList, setAllQuotesList] = useState();\n  const [quote, setQuote] = useState();\n  const [randomQuotesList, setRandomQuotesList] = useState([]);\n\n  useEffect(() => {\n    const fetchQuotes = async () => {\n      try {\n        const result = await fetch(\n          'https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json'\n        );\n        const data = await result.json();\n        setAllQuotesList(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchQuotes();\n  }, []);\n\n  const getQuote = () => {\n    const randomNumber = (Math.random() * allQuotesList.length).toFixed(0);\n    setQuote(allQuotesList[randomNumber]);\n    setRandomQuotesList([...randomQuotesList, allQuotesList[randomNumber]]);\n  };\n\n  const getLastQuote = () => {\n    setQuote(randomQuotesList[randomQuotesList.length - 2]);\n  };\n\n  return (\n    <div className=\"App\">\n      <button onClick={getQuote}>Get quote</button>\n      <button onClick={getLastQuote}>Previous Quote</button>\n      {quote ? (\n        <>\n          <h2>{quote.quote}</h2>\n          <h3>{quote.author}</h3>\n        </>\n      ) : (\n        <div>Click to get quote!</div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}